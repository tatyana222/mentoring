group = 'com.epam.mentoring'
version = '1.0'

buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
}


dependencies {
	// will be used to handle data and security
//	compile('org.springframework.boot:spring-boot-starter-data-jpa')
//	compile('org.flywaydb:flyway-core')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security.oauth:spring-security-oauth2')

	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-starter-actuator")

	compile('org.webjars:angularjs:1.6.4')
	compile('org.webjars:bootstrap:3.3.7-1')
	compile('org.webjars:jquery:3.2.0')
	compile('org.webjars.bower:font-awesome:4.7.0')
	compile('org.webjars:webjars-locator')

	compileOnly('org.projectlombok:lombok')

	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

jar {
	baseName = 'webapp-project'
	manifest {
		attributes 'Implementation-Title': 'WebApp Project',
				'Implementation-Version': version
	}
}

// to publish to maven local run:
// gradle publishToMavenLocal
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}
